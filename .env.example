# ! It is strongly recommended not to share your file with private keys with anyone. Do not push it in repositories.
# Store it locally.

# Uncomment the required lines and set parameters. See `README.md` for details.
# Note. The project configuration behaves correctly (for local development), even if the file `.env` does not exist.

# There you can paste one private key or several separated by a comma (,).
#PRIVATE_KEYS = "0xabc123abc123abc123abc123abc123abc123abc123abc123abc123abc123abc1"

# Set the required URLs here. (Providers: Alchemy, Moralis, Infura, etc.).
#MAINNET_URL = "https://speedy-nodes-nyc.moralis.io/YOUR_MORALIS_API_KEY/eth/mainnet"
#RINKEBY_URL = "https://speedy-nodes-nyc.moralis.io/YOUR_MORALIS_API_KEY/eth/rinkeby"
#ROPSTEN_URL = "https://eth-ropsten.alchemyapi.io/v2/YOUR_ALCHEMY_API_KEY"
#GOERLY_URL = "https://goerly.infura.io/v3/YOUR_INFURA_API_KEY"
#FORKING_URL = ""

# Key and URL for Etherscan's contract verification service.
#ETHERSCAN_API_KEY = "ABC123ABC123ABC123ABC123ABC123ABC1"
#ETHERSCAN_URL = "https://etherscan.io/api"

# Uncomment the line below to enable the solc compiler optimizer. It is turned on automatically during the gas report.
#ENABLED_OPTIMIZER = true
# The number of runs specifies roughly how often each opcode of the deployed code will be executed across the life-time
# of the contract. This means it is a trade-off parameter between code size (deploy cost) and code execution cost (cost
# after deployment). The maximum value is 2**32 - 1. This parameter does not specify the number of iterations of the
# optimizer. The optimizer will always run as many times as it can still improve the code. Equals to 200 by default.
#OPTIMIZER_RUNS = 99999

# Execute `$ npm run gas-report` to see the gas report. Or uncomment the line below to output it every time when
# running the hardhat test command. It is disabled by default.
#REPORT_GAS = true
# Uncomment the line below to output this report in the `gas-report.txt` file.
#GAS_REPORT_TO_FILE = true

# See `hardhat.config.js` for details.
#HARDFORK = "arrowGlacier"

# Uncomment the line below this comment to start an instance of Hardhat Network that forks a network. This means that
# it will simulate having the same state as selected network. This is a way to interact with deployed protocols and
# test complex interactions locally. To use this feature you need to connect to an archive node (for example, with
# Alchemy or Moralis). It is disabled by default.
#FORKING = true
# Set a number here if needed. By default fork from the latest block.
#FORKING_BLOCK_NUMBER = 123456789
